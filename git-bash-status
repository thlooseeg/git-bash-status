# Define escape sequences for common colors
NO_COLOUR="\[\033[0m\]"
BLACK="\[\033[0;30m\]"
BLACKBOLD="\[\033[1;30m\]"
RED="\[\033[0;31m\]"
REDBOLD="\[\033[1;31m\]"
GREEN="\[\033[0;32m\]"
GREENBOLD="\[\033[1;32m\]"
YELLOW="\[\033[0;33m\]"
YELLOWBOLD="\[\033[1;33m\]"
BLUE="\[\033[0;34m\]"
BLUEBOLD="\[\033[1;34m\]"
PURPLE="\[\033[0;35m\]"
PURPLEBOLD="\[\033[1;35m\]"
CYAN="\[\033[0;36m\]"
CYANBOLD="\[\033[1;36m\]"
WHITE="\[\033[0;37m\]"
WHITEBOLD="\[\033[1;37m\]"
# This variable controls how many directory components to display in the prompt
export PROMPT_DIRTRIM=2

function git-branch-name {
    echo $(git symbolic-ref HEAD 2>/dev/null | awk -F/ {'print $NF'})
}
function git-repo-name {
    echo $(git remote show -n origin 2>/dev/null | grep Fetch | cut -d: -f2- | awk -F/ '{ sub(/\.git$/, ""); print $(NF-0)}')
}
function git-dirty {
    [[ $(git status --porcelain 2> /dev/null) ]] && echo "*"
}
function git-unpushed {
    brinfo=$(git branch -v 2>/dev/null | grep $(git-branch-name))
    if [[ $brinfo =~ ("[ahead "([[:digit:]]*)]) ]]
    then
        echo "[${BASH_REMATCH[2]}]"
    fi
}
function git-info {
    repo_name=$(git-repo-name)
    branch_name=$(git-branch-name)
    dirty=$(git-dirty)
    if [[ $dirty ]]
    then
        color="$RED"
        indicator="$dirty"
    else
        status=$(git-unpushed)
        if [[ -n "$status" ]]
        then
            color="$YELLOW"
            indicator="\xe2\x9c\x98"
        else
            color="$GREEN"
            indicator="\xe2\x9c\x93"
        fi
    fi
    echo -e "$color$repo_name ($branch_name) $indicator"
}

function update_prompt() {
    is_git_repo=$(git-repo-name)
    if [[ $is_git_repo ]]
    then
        export PS1="$WHITEBOLD[$BLACKBOLD\u $WHITEBOLD\A $PURPLE\w$WHITEBOLD $(git-info) $WHITEBOLD] $ $NO_COLOUR"
    else
        export PS1="$WHITEBOLD[$BLACKBOLD\u $WHITEBOLD\A $PURPLE\w$WHITEBOLD] $WHITEBOLD$ $NO_COLOUR"
    fi
}

PROMPT_COMMAND=update_prompt
update_prompt
